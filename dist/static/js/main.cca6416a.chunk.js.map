{"version":3,"sources":["config/fbConfig.js","components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/navbar.js","components/dashboard/notifications.js","components/demos/demoSummary.js","components/demos/demoList.js","components/dashboard/dashboard.js","components/demos/demoDetails.js","components/auth/signUp.js","components/auth/signIn.js","store/actions/demoActions.js","components/demos/createDemo.js","App.js","store/reducers/authReducer.js","store/reducers/demoReducer.js","store/reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","connect","dispatch","signOut","getState","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","Notifications","notifications","map","demo","key","id","user","content","moment","time","toDate","fromNow","DemoSummary","demoTitle","producerFirstName","producerLastName","createdAt","calendar","DemoList","demos","Dashboard","this","Component","compose","ordered","firestoreConnect","collection","limit","ownProps","match","params","data","SignUp","emailAdress","password","dateOfBirth","phoneNumber","country","companyName","handleChange","e","setState","target","value","handleSubmit","preventDefault","signUp","authError","onSubmit","htmlFor","onChange","newUser","getFirestore","createUserWithEmailAndPassword","email","resp","doc","set","firstName","lastName","catch","err","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","createDemo","getFirebase","producerId","add","Date","CreateDemo","artistName","musicUrlBrowser","personalMessage","history","push","onDrop","acceptedFiles","getRootProps","getInputProps","App","exact","path","component","DemoDetails","initState","authReducer","action","message","title","artist","demoReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"+UAcAA,IAASC,cAVM,CACbC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,cACnBC,MAAO,uCAITR,IAASS,YAAYC,SAAS,IAEfV,QAAf,ECeeW,cACb,KAPyB,SAAAC,GACzB,MAAO,CACLC,QAAS,kBAAMD,ECRV,SAACA,EAAUE,GAChBd,EACGe,OACAF,UACAG,KAAK,WACJJ,EAAS,CAAEK,KAAM,0BDOVN,CA3BO,SAAAO,GACpB,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,eAAZ,mBAEF,4BACE,uBAAGC,QAASH,EAAML,SAAlB,aAAyC,KAE3C,4BACE,kBAAC,IAAD,CAASO,GAAG,IAAID,UAAU,kCACvB,IACAD,EAAMI,QAAQC,cEJVC,EAbQ,WACrB,OACE,wBAAIL,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,YAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,cCwBOT,cARS,SAAAc,GAEtB,OADAC,QAAQC,IAAIF,GACL,CACLV,KAAMU,EAAMzB,SAASe,KACrBO,QAASG,EAAMzB,SAASsB,UAIbX,CA5BA,SAAAO,GAAU,IACfH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QAERM,EAAQb,EAAKc,IACjB,kBAAC,EAAD,CAAeP,QAASA,IAExB,kBAAC,EAAD,MAEF,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oBAAvB,eAGCS,M,iBCUME,EA3BO,SAAAZ,GAAU,IACtBa,EAAkBb,EAAlBa,cACR,OACE,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iEACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACXY,GACCA,EAAcC,IAAI,SAAAC,GAChB,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMhB,UAAU,aAAac,EAAKG,MAClC,8BAAOH,EAAKI,SACZ,yBAAKlB,UAAU,uBACZmB,IAAOL,EAAKM,KAAKC,UAAUC,mBCCnCC,EAhBK,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACrB,OACE,yBAAKd,UAAU,+BACb,yBAAKA,UAAU,gEACb,0BAAMA,UAAU,cAAcc,EAAKU,WACnC,wCACaV,EAAKW,kBADlB,IACsCX,EAAKY,kBAE3C,uBAAG1B,UAAU,aACVmB,IAAOL,EAAKa,UAAUN,UAAUO,eCO5BC,EAfE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,yBAAK9B,UAAU,qBACZ8B,GACCA,EAAMjB,IAAI,SAAAC,GACR,OACE,kBAAC,IAAD,CAAMb,GAAI,SAAWa,EAAKE,GAAID,IAAKD,EAAKE,IACtC,kBAAC,EAAD,CAAaF,KAAMA,S,gBCH3BiB,E,iLACK,MAEgCC,KAAKjC,MAApC+B,EAFD,EAECA,MAAOlC,EAFR,EAEQA,KAAMgB,EAFd,EAEcA,cACrB,OAAKhB,EAAKc,IAGR,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAU8B,MAAOA,KAEnB,yBAAK9B,UAAU,wBACb,kBAAC,EAAD,CAAeY,cAAeA,OAThB,kBAAC,IAAD,CAAUX,GAAG,gB,GAJfgC,aA8BTC,cACb1C,YAXsB,SAAAc,GAEtB,OADAC,QAAQC,IAAIF,GACL,CACLwB,MAAOxB,EAAMhB,UAAU6C,QAAQL,MAC/BlC,KAAMU,EAAMzB,SAASe,KACrBgB,cAAeN,EAAMhB,UAAU6C,QAAQvB,iBAOzCwB,2BAAiB,CACf,CAAEC,WAAY,SACd,CAAEA,WAAY,gBAAiBC,MAAO,KAJ3BJ,CAMbH,GCMaG,cACb1C,YAXsB,SAACc,EAAOiC,GAC9B,IAAMvB,EAAKuB,EAASC,MAAMC,OAAOzB,GAC3Bc,EAAQxB,EAAMhB,UAAUoD,KAAKZ,MAEnC,MAAO,CACLhB,KAFWgB,EAAQA,EAAMd,GAAM,KAG/BpB,KAAMU,EAAMzB,SAASe,QAMvBwC,2BAAiB,CAAC,CAAEC,WAAY,WAFnBH,CA3CK,SAAAnC,GAAU,IACpBe,EAAef,EAAfe,KAER,OAFuBf,EAATH,KAEJc,IACNI,EAEA,yBAAKd,UAAU,kCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,cAAhB,gBAA2Cc,EAAKU,WAChD,8OAOF,yBAAKxB,UAAU,wCACb,6BAAMmB,IAAOL,EAAKa,UAAUN,UAAUO,YACtC,uBAAG5B,UAAU,kBAAb,qBAON,yBAAKA,UAAU,oBACb,+CAxBgB,kBAAC,IAAD,CAAUC,GAAG,a,QCL/B0C,E,2MACJrC,MAAQ,CACNsC,YAAa,GACbC,SAAU,GACVpB,kBAAmB,GACnBC,iBAAkB,GAClBoB,YAAa,GACbC,YAAa,GACbC,QAAS,GACTC,YAAa,I,EAEfC,aAAe,SAAAC,GAEb,EAAKC,SAAL,eAEGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAAAJ,GAEbA,EAAEK,iBACF,EAAKzD,MAAM0D,OAAO,EAAKnD,Q,wEAEf,IAAD,EACqB0B,KAAKjC,MAAzBH,EADD,EACCA,KAAM8D,EADP,EACOA,UACd,OAAI9D,EAAKc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAM2D,SAAU3B,KAAKuB,aAAcvD,UAAU,QAC3C,wBAAIA,UAAU,yBAAd,WACA,yBAAKA,UAAU,eACb,2BAAO4D,QAAQ,eAAf,gBACA,2BAAO9D,KAAK,OAAOkB,GAAG,QAAQ6C,SAAU7B,KAAKkB,gBAE/C,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,OAAOkB,GAAG,WAAW6C,SAAU7B,KAAKkB,gBAElD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,aAAf,cACA,2BAAO9D,KAAK,OAAOkB,GAAG,YAAY6C,SAAU7B,KAAKkB,gBAEnD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,YAAf,aACA,2BAAO9D,KAAK,OAAOkB,GAAG,WAAW6C,SAAU7B,KAAKkB,gBAGlD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,eAAf,iBACA,2BAAO9D,KAAK,OAAOkB,GAAG,cAAc6C,SAAU7B,KAAKkB,gBAGrD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,gBAAf,gBACA,2BAAO9D,KAAK,OAAOkB,GAAG,cAAc6C,SAAU7B,KAAKkB,gBAErD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,WAAf,WACA,2BAAO9D,KAAK,OAAOkB,GAAG,UAAU6C,SAAU7B,KAAKkB,gBAEjD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,eAAf,gBACA,2BAAO9D,KAAK,OAAOkB,GAAG,cAAc6C,SAAU7B,KAAKkB,gBAErD,yBAAKlD,UAAU,eACb,4BAAQA,UAAU,+BAAlB,UAEA,yBAAKA,UAAU,mBACZ0D,EAAY,2BAAIA,GAAiB,a,GApE3BzB,aA0FNzC,cAbS,SAAAc,GACtB,MAAO,CACLV,KAAMU,EAAMzB,SAASe,KACrB8D,UAAWpD,EAAMV,KAAK8D,YAIC,SAAAjE,GACzB,MAAO,CACLgE,OAAQ,SAAAK,GAAO,OAAIrE,ER7DD,SAAAqE,GACpB,OAAO,SAACrE,EAAUE,EAAX,GAA2C,IAC1CL,GAAYyE,EAD6B,EAAnBA,gBAE5BlF,EACGe,OACAoE,+BAA+BF,EAAQG,MAAOH,EAAQjB,UACtDhD,KAAK,SAAAqE,GACJ,OAAO5E,EACJ+C,WAAW,SACX8B,IAAID,EAAKjD,KAAKP,KACd0D,IAAI,CACHC,UAAWP,EAAQO,UACnBC,SAAUR,EAAQQ,SAClBlE,SAAU0D,EAAQO,UAAU,GAAKP,EAAQQ,SAAS,GAClDxB,YAAagB,EAAQhB,YACrBC,YAAae,EAAQf,YACrBC,QAASc,EAAQd,QACjBC,YAAaa,EAAQb,gBAG1BpD,KAAK,WACJJ,EAAS,CAAEK,KAAM,oBAElByE,MAAM,SAAAC,GACL/E,EAAS,CAAEK,KAAM,eAAgB0E,WQqCTf,CAAOK,OAIxBtE,CAGbmD,GC7FI8B,E,2MACJnE,MAAQ,CACN2D,MAAO,GACPpB,SAAU,I,EAGZK,aAAe,SAAAC,GAEb,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,S,EAK5BC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKzD,MAAM2E,OAAO,EAAKpE,Q,wEAGf,IAAD,EACqB0B,KAAKjC,MAAzB2D,EADD,EACCA,UACR,OAFO,EACY9D,KACVc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAM2D,SAAU3B,KAAKuB,aAAcvD,UAAU,QAC3C,wBAAIA,UAAU,yBAAd,WACA,yBAAKA,UAAU,eACb,2BAAOF,KAAK,OAAOkB,GAAG,QAAQ6C,SAAU7B,KAAKkB,eAC7C,2BAAOU,QAAQ,SAAf,UAEF,yBAAK5D,UAAU,eACb,2BAAOF,KAAK,OAAOkB,GAAG,WAAW6C,SAAU7B,KAAKkB,eAChD,2BAAOU,QAAQ,YAAf,aAEF,yBAAK5D,UAAU,eACb,4BAAQA,UAAU,+BAAlB,SACA,yBAAKA,UAAU,qBACZ0D,EAAY,2BAAIA,GAAiB,a,GArC3BzB,aA2DNzC,cAbS,SAAAc,GACtB,MAAO,CACLoD,UAAWpD,EAAMV,KAAK8D,UACtB9D,KAAMU,EAAMzB,SAASe,OAIE,SAAAH,GACzB,MAAO,CACLiF,OAAQ,SAAAC,GAAK,OAAIlF,GTzDCmF,ESyDeD,ETxD5B,SAAClF,EAAUE,GAGhBd,EACGe,OACAiF,2BAA2BD,EAAYX,MAAOW,EAAY/B,UAC1DhD,KAAK,WACJJ,EAAS,CAAEK,KAAM,mBAElByE,MAAM,SAAAC,GACL/E,EAAS,CAAEK,KAAM,cAAe0E,aAXlB,IAAAI,KS6DPpF,CAGbiF,G,qOCnEK,IAAMK,EAAa,SAAAhE,GACxB,OAAO,SAACrB,EAAUE,EAAX,GAAuD,EAAhCoF,YAAiC,IAGvDzF,GAAYyE,EAH0C,EAAnBA,gBAKnCiB,GADUrF,IAAWd,SAASsB,QACjBR,IAAWd,SAASe,KAAKc,KAE5CpB,EACG+C,WAAW,SACX4C,I,qVAFH,IAGOnE,EAHP,CAIIa,UAAW,IAAIuD,KACfF,WAAYA,KAIbnF,KAAK,WACJJ,EAAS,CAAEK,KAAM,cAAegB,WAEjCyD,MAAM,SAAAC,GACL/E,EAAS,CAAEK,KAAM,oBAAqB0E,YCdxCW,E,2MACJ7E,MAAQ,CACN8E,WAAY,GACZ5D,UAAW,GACX6D,gBAAiB,GACjBC,gBAAiB,I,EAGnBpC,aAAe,SAAAC,GAAM,IAAD,EACIA,EAAEE,OAAhBrC,EADU,EACVA,GAAIsC,EADM,EACNA,MACZ,EAAKF,SAAL,eACGpC,EAAKsC,K,EAGVC,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKzD,MAAM+E,WAAW,EAAKxE,OAC3B,EAAKP,MAAMwF,QAAQC,KAAK,M,wEAKxB,OADiBxD,KAAKjC,MAAdH,KACEc,IAGR,yBAAKV,UAAU,aACb,0BAAM2D,SAAU3B,KAAKuB,aAAcvD,UAAU,QAC3C,wBAAIA,UAAU,yBAAd,0BACA,yBAAKA,UAAU,eACb,2BAAO4D,QAAQ,cAAf,iBACA,2BAAO9D,KAAK,OAAOkB,GAAG,aAAa6C,SAAU7B,KAAKkB,gBAEpD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,aAAf,gBACA,2BAAO9D,KAAK,OAAOkB,GAAG,YAAY6C,SAAU7B,KAAKkB,gBAEnD,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,mBAAf,yBACA,2BACE9D,KAAK,OACLkB,GAAG,kBACH6C,SAAU7B,KAAKkB,gBAInB,yBAAKlD,UAAU,eACb,2BAAO4D,QAAQ,mBAAf,sBACA,2BACE9D,KAAK,OACLkB,GAAG,kBACH6C,SAAU7B,KAAKkB,gBAGnB,yBAAKlD,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,2BACb,kBAAC,IAAD,CACEyF,OAAQ,SAAAC,GAAa,OAAInF,QAAQC,IAAIkF,KAEpC,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,iCACE,wBAASD,IACP,0BAAWC,KACX,kGAYhB,yBAAK5F,UAAU,eACb,4BAAQA,UAAU,+BAAlB,eACA,yBAAKA,UAAU,uBAxDD,kBAAC,IAAD,CAAUC,GAAG,e,GAvBdgC,aAmGVzC,cAZS,SAAAc,GACtB,MAAO,CACLV,KAAMU,EAAMzB,SAASe,OAIE,SAAAH,GACzB,MAAO,CACLqF,WAAY,SAAAhE,GAAI,OAAIrB,EAASqF,EAAWhE,OAI7BtB,CAGb2F,GCjFaU,E,iLAjBX,OACE,kBAAC,IAAD,KACE,yBAAK7F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjC,kBAAC,IAAD,CAAOgE,KAAK,YAAYC,UAAWC,IACnC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWrD,IACjC,kBAAC,IAAD,CAAOoD,KAAK,UAAUC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,UAAUC,UAAWb,W,GAX3BlD,a,mjBCTlB,IAAMiE,EAAY,CAChBxC,UAAW,MAqCEyC,EAlCK,WAAgC,IAA/B7F,EAA8B,uDAAtB4F,EAAWE,EAAW,uCACjD,OAAQA,EAAOtG,MACb,IAAK,cAEH,OADAS,QAAQC,IAAI,eACL,KACFF,EADL,CAEEoD,UAAW,iBAEf,IAAK,eAEH,OADAnD,QAAQC,IAAI,gBACL,KACFF,EADL,CAEEoD,UAAW,OAEf,IAAK,iBAEH,OADAnD,QAAQC,IAAI,kBACLF,EACT,IAAK,gBAEH,OADAC,QAAQC,IAAI,iBACL,KACFF,EADL,CAEEoD,UAAW,OAEf,IAAK,eAEH,OADAnD,QAAQC,IAAI,gBACL,KACFF,EADL,CAEEoD,UAAW0C,EAAO5B,IAAI6B,UAE1B,QACE,OAAO/F,IClCP4F,EAAY,CAChBpE,MAAO,CACL,CAAEd,GAAI,IAAKsF,MAAO,kBAAmBC,OAAQ,UAC7C,CAAEvF,GAAI,IAAKsF,MAAO,gBAAiBC,OAAQ,wBAC3C,CAAEvF,GAAI,IAAKsF,MAAO,UAAWC,OAAQ,oBAiB1BC,EAbK,WAAgC,IAA/BlG,EAA8B,uDAAtB4F,EAAWE,EAAW,uCACjD,OAAQA,EAAOtG,MACb,IAAK,cAEH,OADAS,QAAQC,IAAI,eAAgB4F,EAAOtF,MAC5BR,EACT,IAAK,oBAEH,OADAC,QAAQC,IAAI,oBAAqB4F,EAAO5B,KACjClE,EACT,QACE,OAAOA,I,QCJEmG,EAPKC,YAAgB,CAClC9G,KAAMuG,EACNrF,KAAM0F,EACNlH,UAAWqH,mBACX9H,SAAU+H,oB,SCONC,EAAQC,YACZL,EACAvE,YACE6E,YAAgBC,IAAMC,kBAAkB,CAAElC,0BAAahB,+BACvDmD,yBAAeC,GACfC,6BAAmBD,EAAU,CAC3BE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAKzBV,EAAMW,oBAAoB3H,KAAK,WAC7B4H,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GACf,kBAAC,EAAD,OAEFc,SAASC,eAAe,a","file":"static/js/main.cca6416a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar fbConfig = {\n  apiKey: \"AIzaSyA39EBH7U3XCgvP7N71YUKl7Ko-93zc9OY\",\n  authDomain: \"diablospring.firebaseapp.com\",\n  databaseURL: \"https://diablospring.firebaseio.com\",\n  projectId: \"diablospring\",\n  storageBucket: \"\",\n  messagingSenderId: \"72327650349\",\n  appId: \"1:72327650349:web:2123ad412419df45\"\n};\n// Initialize Firebase\nfirebase.initializeApp(fbConfig);\nfirebase.firestore().settings({});\n\nexport default firebase;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\"> Drop Demo </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/demo/ + id\">Download Demo </NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}> Log Out </a>{\" \"}\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating red lighten-1\">\n          {\" \"}\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","import firebase from \"../../config/fbConfig\";\n//import { getFirebase } from \"react-redux-firebase\"; werkt niet meer in nieuwe API\n\nexport const signIn = credentials => {\n  return (dispatch, getState) => {\n    //const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCES\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCES\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n            dateOfBirth: newUser.dateOfBirth,\n            phoneNumber: newUser.phoneNumber,\n            country: newUser.country,\n            companyName: newUser.companyName\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCES\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Sign In</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./signedInLinks\";\nimport SignedOutLinks from \"./signedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  //console.log(auth);\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo right\">\n          DIABLO DEMO\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content black-text text-darken card-panel teal lighten-2\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(demo => {\n                return (\n                  <li key={demo.id}>\n                    <span className=\"pink-text\">{demo.user}</span>\n                    <span>{demo.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(demo.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst DemoSummary = ({ demo }) => {\n  return (\n    <div className=\"card z-depht-0 demo-summary\">\n      <div className=\"card-content black-text text-darken card-panel red lighten-1\">\n        <span className=\"card-title\">{demo.demoTitle}</span>\n        <p>\n          Posted by {demo.producerFirstName} {demo.producerLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(demo.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DemoSummary;\n","import React from \"react\";\nimport DemoSummary from \"./demoSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst DemoList = ({ demos }) => {\n  return (\n    <div className=\"demo-list section\">\n      {demos &&\n        demos.map(demo => {\n          return (\n            <Link to={\"/demo/\" + demo.id} key={demo.id}>\n              <DemoSummary demo={demo} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default DemoList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./notifications\";\nimport DemoList from \"../demos/demoList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { demos, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <DemoList demos={demos} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    demos: state.firestore.ordered.demos,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n    //demos: state.demo.demos // (props) property: state in rootReducer.property in projectReducer\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"demos\" },\n    { collection: \"notifications\", limit: 3 }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport moment from \"moment\";\n\nconst DemoDetails = props => {\n  const { demo, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"signin\" />;\n  if (demo) {\n    return (\n      <div className=\"container section demo-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content red lighten-1\">\n            <span className=\"card-title\">Demo Title - {demo.demoTitle}</span>\n            <p>\n              Ut dolore amet minim nostrud pariatur ad enim exercitation sit\n              non. Aute esse dolor duis reprehenderit laboris officia aliquip\n              veniam et aliquip est. Fugiat amet minim ut exercitation commodo\n              ipsum laboris.\n            </p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>{moment(demo.createdAt.toDate()).calendar()}</div>\n            <i className=\"material-icons\">cloud_download</i>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading demo...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const demos = state.firestore.data.demos;\n  const demo = demos ? demos[id] : null;\n  return {\n    demo: demo,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"demos\" }])\n)(DemoDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    emailAdress: \"\",\n    password: \"\",\n    producerFirstName: \"\",\n    producerLastName: \"\",\n    dateOfBirth: \"\",\n    phoneNumber: \"\",\n    country: \"\",\n    companyName: \"\"\n  };\n  handleChange = e => {\n    //const { id, value } = e.target;\n    this.setState({\n      //[id]: value\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    //console.log(e);\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"none\">\n          <h1 className=\"white-text text-white\">Sign Up</h1>\n          <div className=\"input-field\">\n            <label htmlFor=\"emailAdress\">Email Adress</label>\n            <input type=\"text\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"Password\">Password</label>\n            <input type=\"text\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"dateOfBirth\">Date of birth</label>\n            <input type=\"text\" id=\"dateOfBirth\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"phone number\">Phone number</label>\n            <input type=\"text\" id=\"phoneNumber\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"country\">Country</label>\n            <input type=\"text\" id=\"country\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"companyName\">Company name</label>\n            <input type=\"text\" id=\"companyName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1 z-depth-0\">Submit</button>\n\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    //const { id, value } = e.target;\n    this.setState({\n      [e.target.id]: e.target.value\n      //[id]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"none\">\n          <h1 className=\"white-text text-white\">Sign In</h1>\n          <div className=\"input-field\">\n            <input type=\"text\" id=\"email\" onChange={this.handleChange} />\n            <label htmlFor=\"email\">Email</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" id=\"password\" onChange={this.handleChange} />\n            <label htmlFor=\"password\">Password</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1 z-depth-0\">Login</button>\n            <div className=\"white-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","export const createDemo = demo => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //async call to database\n\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const producerId = getState().firebase.auth.uid;\n\n    firestore\n      .collection(\"demos\")\n      .add({\n        ...demo,\n        createdAt: new Date(),\n        producerId: producerId\n        //producerFirstName: profile.firstName,\n        //producerLastName: profile.lastName\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_DEMO\", demo });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_DEMO_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { connect } from \"react-redux\";\nimport { createDemo } from \"../../store/actions/demoActions\";\nimport { Redirect } from \"react-router-dom\";\n\n// heet Drop demo in navbar\nclass CreateDemo extends Component {\n  state = {\n    artistName: \"\",\n    demoTitle: \"\",\n    musicUrlBrowser: \"\",\n    personalMessage: \"\"\n  };\n\n  handleChange = e => {\n    const { id, value } = e.target;\n    this.setState({\n      [id]: value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createDemo(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"signin\" />;\n    //const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"none\">\n          <h1 className=\"white-text text-white\"> DROP YOUR DEMO HERE! </h1>\n          <div className=\"input-field\">\n            <label htmlFor=\"artistName\"> Artist Name </label>\n            <input type=\"text\" id=\"artistName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"demoTitle\"> Demo Title </label>\n            <input type=\"text\" id=\"demoTitle\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"musicUrlBrowser\"> Music URL / Browser </label>\n            <input\n              type=\"text\"\n              id=\"musicUrlBrowser\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"personalMessage\"> Personal Message </label>\n            <input\n              type=\"text\"\n              id=\"personalMessage\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n              <div className=\"card blue-grey darken-1\">\n                <div className=\"card-content white-text\">\n                  <Dropzone\n                    onDrop={acceptedFiles => console.log(acceptedFiles)}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <p>\n                            Drag 'n' drop your demo file here, or click to\n                            select files\n                          </p>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1 z-depth-0\">Submit Demo</button>\n            <div className=\"red-text center\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createDemo: demo => dispatch(createDemo(demo))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateDemo);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/layout/navbar\";\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport DemoDetails from \"./components/demos/demoDetails\";\nimport SignUp from \"./components/auth/signUp\";\nimport SignIn from \"./components/auth/signIn\";\nimport CreateDemo from \"./components/demos/createDemo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/demo/:id\" component={DemoDetails} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/create\" component={CreateDemo} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCES\":\n      console.log(\"login succes\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCES\":\n      console.log(\"signout succes\");\n      return state;\n    case \"SIGNUP_SUCCES\":\n      console.log(\"signup succes\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  demos: [\n    { id: \"1\", title: \"The Devils ride\", artist: \"Sweety\" },\n    { id: \"2\", title: \"Smoking Bacon\", artist: \"Electric Hillbillies\" },\n    { id: \"3\", title: \"Synergy\", artist: \"Samantha Shine\" }\n  ]\n};\n\nconst demoReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_DEMO\":\n      console.log(\"created demo\", action.demo);\n      return state;\n    case \"CREATE_DEMO_ERROR\":\n      console.log(\"create demo error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default demoReducer;\n","import authReducer from \"./authReducer\";\nimport demoReducer from \"./demoReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  demo: demoReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n//import { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\n//import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n//trying to fix mygration problems API, but didn't work so fixed it with import from fbConfig\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))));\n\nconst rrfConfig = {\nuserProfile: 'users',\nattachAuthIsReady: true,\nuseFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\nconst rrfProps = {\nfirebase,\nconfig: rrfConfig,\ndispatch: store.dispatch,\ncreateFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(\n\n<ReactReduxFirebaseProvider {...rrfProps}>\n<App/>\n</ReactReduxFirebaseProvider>,\ndocument.getElementById('root')\n\n);*/\n"],"sourceRoot":""}